# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName = birth-registration-matching-proxy

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

play.modules.enabled += "uk.gov.hmrc.brm.config.CustomWSConfigParserModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"
play.modules.disabled += "play.api.libs.ws.ahc.AhcWSModule"
play.modules.enabled  += "uk.gov.hmrc.brm.http.CustomAhcWSModule"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router=prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
    # 300 is the default, you may need to change this according to your needs
    confidenceLevel = 300

    uk.gov.hmrc.brm.controllers.MatchingController = {
        needsAuth = false
        # Diabled logging so that we don't see implicit logging in Kibana
        needsLogging = false
        needsAuditing = false
      }

}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    enabled = true
}

# Microservice specific config
auditing {
    enabled=true
}

microservice {
    services {

        auth {
            host = localhost
            port = 8500
        }

        datastream {
            host = localhost
            port = 8100
            enabled = false
        }

        birth-registration-matching {

            gro  {

                tls {
                    //if you wish to enable tls for local testing you must generate a certificate in .p12 format with the below password and place it in the conf/cert folder
                    tlsEnabled = false
                    //these keys are dummy values which are overidden in environments
                    privateKeystorePath = "conf/cert/certificate.p12"
                    privateKeystoreType = "pkcs12"
                    privateKeystorePassword = "cGFzc3dvcmQ="
                    certificateExpiryDate = 2050-08-07
                }

                authentication {

                    // host = 127.0.0.1 rather than localhost as http-verbs 13.x.x omits implicit headers to external hosts
                    // setting it as this allows us to test as if the stub is an external resource (i.e. lev)
                    v2 {
                        key = test
                        username = test
                        clientID = test
                        clientSecret = test
                        grantType = password
                        host = 127.0.0.1
                        protocol = http
                        port = 8099
                        uri = "/auth/token"
                    }
                }
            }

            host = localhost
            protocol = http
            port = 8099
            features {
                audit {
                    excludedWords = ["subjects", "givenname"]
                    # don't log the body of requests if contain blocked words.
                    disableAuditingLogging = true
                }
            }
        }
    }
}

http-verbs.retries.intervals = ["5000ms", "5000ms", "5000ms"]

http-verbs.proxy.enabled = false
proxy.username = squiduser
proxy.password = squiduser
proxy.host = localhost
proxy.port = 3128
proxy.protocol = http

play.ws.ssl {

    keyManager = {
        stores = [
            {
                path     = ${microservice.services.birth-registration-matching.gro.tls.privateKeystorePath}
                password = ${microservice.services.birth-registration-matching.gro.tls.privateKeystorePassword}
                type     = ${microservice.services.birth-registration-matching.gro.tls.privateKeystoreType}
            }
        ]
    }

    enabledProtocols = ["TLSv1.2"]
    protocol = "TLSv1.2"

    disabledKeyAlgorithms = ["DHE keySize < 2048", "ECDH keySize < 2048", "ECDHE keySize < 2048", "RSA keySize < 2048", "DSA keySize < 2048", "EC keySize < 224"]

}
