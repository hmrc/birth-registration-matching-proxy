# Copyright 2021 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "frontend.conf"

appName=birth-registration-matching-proxy


# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

play.modules.enabled += "uk.gov.hmrc.brm.config.ModuleBindings"
play.modules.enabled += "uk.gov.hmrc.brm.config.CustomWSConfigParserModule"

play.modules.disabled += "play.api.libs.ws.ahc.AhcWSModule"
play.modules.enabled += "uk.gov.hmrc.brm.http.CustomAhcWSModule"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key="OhMSYIWoItbVV9bvKjsJgUBv3HahBDK5SV1Ci4weOPT3m6K5QtwLxbHRplUa5y7S"

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router=prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
    # 300 is the default, you may need to change this according to your needs
    confidenceLevel = 300

    com.kenshoo.play.metrics.MetricsController = {
      needsAuth = false
      needsLogging = false
      needsAuditing = false
    }

    uk.gov.hmrc.brm.controllers.MatchingController = {
        needsAuth = false
        # Diabled logging so that we don't see implicit logging in Kibana
        needsLogging = false
        needsAuditing = false
      }

}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}


# Microservice specific config

auditing {
    enabled=true
    traceRequests=true
    consumer {
        baseUri {
            host = localhost
            port = 8100
        }
    }
}

microservice {
    metrics {
        graphite {
            host = graphite
            port = 2003
            prefix = play.${appName}.
            enabled = false
        }
    }

    services {

        auth {
            host = localhost
            port = 8500
        }

        proxy {

            proxyRequiredForThisEnvironment = false

            username = squiduser
            password = squiduser
            protocol = http
            host = localhost
            port = 3128
        }

        birth-registration-matching {

            gro  {

                tls {
                    tlsEnabled = false

                    //these keys are dummy values, not used in any environments, kept here for local testing
                    privateKeystore = """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"""
                    privateKeystoreKey = "cGFzc3dvcmQ="
                    certificateExpiryDate = 2021-08-07
                }

                authentication {

                    v2 {
                        key = key
                        username = username
                        clientID = clientID
                        clientSecret = clientSecret
                        grantType = password
                        host = localhost
                        protocol = http
                        port = 8099
                        uri = "/auth/realms/lev/protocol/openid-connect/token"
                    }
                }
            }

            host = localhost
            protocol = http
            port = 8099
            features {
                audit {
                    excludedWords = ["subjects", "givenname"]
                    # don't log the body of requests if contain blocked words.
                    disableAuditingLogging = true
                }
            }
        }
    }
}

http-verbs.retries.intervals = ["5000ms", "5000ms", "5000ms"]

play.ws.ssl {

    keyManager = {
        stores = [
            {
                type = "JKS"
                data = ${microservice.services.birth-registration-matching.gro.tls.privateKeystore}
                password = ${microservice.services.birth-registration-matching.gro.tls.privateKeystoreKey}
            }
        ]
    }

    enabledProtocols = ["TLSv1.2"]
    protocol = "TLSv1.2"

    disabledKeyAlgorithms = ["DHE keySize < 2048", "ECDH keySize < 2048", "ECDHE keySize < 2048", "RSA keySize < 2048", "DSA keySize < 2048", "EC keySize < 224"]

}

